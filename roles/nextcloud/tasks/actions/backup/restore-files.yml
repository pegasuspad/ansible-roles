---
- name: (RESTORE) Calculate snapshot files path
  ansible.builtin.set_fact:
    snapshot_files: "{{ __nextcloud_paths.backup_restore }}/{{ nextcloud_snapshot_id }}/data"
- name: (RESTORE) Check if snapshot files exist
  ansible.builtin.stat:
    path: "{{ snapshot_files }}"
  register: files_path

- name: (RESTORE) Extract snapshot, if missing
  when: not files_path.stat.exists
  ansible.builtin.include_tasks:
    file: actions/backup/download-snapshot.yml

# We ignore errors setting maintenance mode, because many scenarios which require a restore
# (missing app configuration, for example) may prevent successfully entering maintenance mode.
# TODO - in cases like this, should we shut down Apache?
- name: (RESTORE) Try to enable maintenance mode
  block:
    - name: (RESTORE) Invoke actions/enable-maintenance-mode-with-autodisable.yml
      ansible.builtin.include_tasks:
        file: actions/enable-maintenance-mode-with-autodisable.yml
  ignore_errors: yes 

- name: (RESTORE) Remove existing data directory
  ansible.builtin.file:
    path: "{{ __nextcloud_paths.data }}"
    state: absent
- name: (RESTORE) Recreate data directory with correct permissions
  ansible.builtin.file:
    group: www-data
    mode: "0750"
    owner: www-data
    path: "{{ __nextcloud_paths.data }}"
    state: directory
- name: (RESTORE) Sync restored data to Nextcloud data directory
  ansible.posix.synchronize:
    archive: true
    compress: true
    delete: true
    dest: "{{ __nextcloud_paths.data }}"
    mode: push
    src: "{{ snapshot_files }}/"
  delegate_to: "{{ inventory_hostname }}"