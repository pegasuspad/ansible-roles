---
- name: (BACKUP) Set pre_backup_cmd if a "before" hook was specified
  ansible.builtin.set_fact:
    __backup_default_values: "{{ __backup_default_values | combine({ 'pre_backup_cmd': backup_before_hook }) }}"
  when: backup_before_hook is defined
- name: (BACKUP) Set monitoring_call if an "after" hook was specified
  ansible.builtin.set_fact:
    __backup_default_values: "{{ __backup_default_values | combine({ 'monitoring_call': backup_after_hook }) }}"
  when: backup_after_hook is defined

- name: (BACKUP) Merge defaults into backup configurations
  ansible.builtin.set_fact:
    __backup_configs_with_defaults: >-
      {{
        __backup_configs_with_defaults | default([]) + [
          {
            'name': item.name,
            'repo': item.name,
            'scheduled': item.schedule_enabled | d(item.schedule is defined),
            'schedule_oncalendar': item.schedule if item.schedule is defined else ''
          } | combine(__backup_default_values)
        ]
      }}
  loop: "{{ backup_repositories }}"

- name: (BACKUP) Convert backup_repositories to list of key/value pairs
  ansible.builtin.set_fact:
    __backup_repository_list_key_value_pairs: >-
      {{
        __backup_repository_list_key_value_pairs | default([]) + [
          {
            'key': item.name,
            'value': item | ansible.utils.remove_keys(target=['name', 'schedule', 'schedule_enabled'])
          }
        ]
      }}
  loop: "{{ backup_repositories }}"

- name: Display __backup_repository_list_key_value_pairs as dict
  ansible.builtin.debug:
    msg: '{{ __backup_repository_list_key_value_pairs | items2dict}}'

- name: Display __backup_configs_with_defaults
  ansible.builtin.debug:
    msg: '{{ __backup_configs_with_defaults }}'

- name: (BACKUP) Install and configure restic
  ansible.builtin.include_role:
    name: local.pegasuspad.restic
  vars:
    restic_backups: '{{ __backup_configs_with_defaults }}'
    restic_create_schedule: true
    restic_dir_group: '{{ backup_group }}'
    restic_dir_owner: '{{ backup_user }}'
    restic_download_path: '{{ backup_script_dir }}'
    restic_no_log: '{{ backup_no_log }}'
    restic_repos: '{{ __backup_repository_list_key_value_pairs | items2dict }}'
    restic_script_dir: '{{ backup_script_dir }}'
    restic_version: '{{ backup_restic_version }}'
    restic_systemd_timer_randomizeddelaysec: '{{ backup_randomized_delay_in_seconds }}'
  when: backup_enabled
